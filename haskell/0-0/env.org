Created       : 2014 Feb 19 (Wed) 20:53:53 by Harold Carr.
Last Modified : 2014 Feb 21 (Fri) 15:20:43 by Harold Carr.


------------------------------------------------------------------------------
2014-02-19

http://tim.dysinger.net/posts/2014-02-18-haskell-with-emacs.html

installed via ELPA
- auto-complete
- fuzzy
- ghc (Tim calls it ghc-mod)
- haskell-mode
- popup
- shm (structured haskell mode)

cabal install ghci-ng

http://www.mew.org/~kazu/proj/ghc-mod/en/install.html
cabal update
cabal install ghc-mod
pushd ~/Library/Haskell/ghc-7.6.3/lib/ghc-mod-3.1.6/share/
make
pushd ~/.sync/.esync/emacs/.emacs.d/elpa/
mv    ghc-20140112.2021   ghc-20140112.2021-orig
ln -s ~/Library/Haskell/ghc-7.6.3/lib/ghc-mod-3.1.6/share/ ghc-20140112.2021
cp ghc-20140112.2021-orig/ghc-autoloads.el ghc-20140112.2021


https://github.com/chrisdone/structured-haskell-mode
cabal install structured-haskell-mode
pushd ~/Library/Haskell/ghc-7.6.3/lib/structured-haskell-mode-1.0.2/share/elisp/
for f in *.el
do
echo $f
emacs -Q --batch $f --eval "(progn (add-to-list 'load-path \".\") (emacs-lisp-byte-compile))"
done
pushd ~/.sync/.esync/emacs/.emacs.d/elpa
mv    shm-20140218.1517    shm-20140218.1517-orig
ln -s ~/Library/Haskell/ghc-7.6.3/lib/structured-haskell-mode-1.0.2/share/elisp/  shm-20140218.1517
cp shm-20140218.1517-orig/shm-autoloads.el shm-20140218.1517

cabal install stylish-haskell

.emacs.org:  turn off/tangle :  ;;'(haskell-mode-hook (quote (turn-on-haskell-indent)))

       (progn
         (autoload 'ghc-init "ghc" nil t)
         (defun el-get-ghc-mod-hook ()
           (ghc-init)
           (flymake-mode))
         (add-hook 'haskell-mode-hook 'el-get-ghc-mod-hook))

       M-x auto-complete-mode
       (progn
         ;; haskell-mode
         (require 'haskell-mode-autoloads)
         (add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)
         (add-hook 'haskell-mode-hook 'turn-on-haskell-indentation)
         (setq haskell-stylish-on-save t
               ;;; HC 2014-02-20: haskell-process-type 'cabal-repl
               haskell-process-args-cabal-repl '("--ghc-option=-ferror-spans"
                                                 "--with-ghc=ghci-ng"))
         (define-key haskell-mode-map (kbd "C-x C-d") nil)
         (define-key haskell-mode-map (kbd "C-c C-z") 'haskell-interactive-switch)
         (define-key haskell-mode-map (kbd "C-c C-l") 'haskell-process-load-file)
         (define-key haskell-mode-map (kbd "C-c C-b") 'haskell-interactive-switch)
         (define-key haskell-mode-map (kbd "C-c C-t") 'haskell-process-do-type)
         (define-key haskell-mode-map (kbd "C-c C-i") 'haskell-process-do-info)
         (define-key haskell-mode-map (kbd "C-c M-.") nil)
         (define-key haskell-mode-map (kbd "C-c C-d") nil)
         (define-key haskell-mode-map (kbd "C-c v c") 'haskell-cabal-visit-file)
         ;; auto-complete
         (defun el-get-ac-haskell-candidates (prefix)
           (let ((cs (haskell-process-get-repl-completions (haskell-process) prefix)))
             (remove-if (lambda (c) (string= "" c)) cs)))
         (ac-define-source haskell
           '((candidates . (el-get-ac-haskell-candidates ac-prefix))))
         (defun el-get-haskell-hook ()
           (add-to-list 'ac-sources 'ac-source-haskell))
         (add-hook 'haskell-mode-hook 'el-get-haskell-hook))


         (require 'shm)
         (add-hook 'haskell-mode-hook 'structured-haskell-mode)

         ;; then, when in Haskell file, do M-x auto-complete-mode


# End of file.
